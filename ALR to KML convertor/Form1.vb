Imports System.IO





Public Class frmALRtoKML
    Dim strooien As Boolean
    Dim endtagset As Boolean


    Private Sub frmALRtoKML_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load

        'Enable dropping of files on this form
        Me.AllowDrop = True

        'Add handlers
        AddHandler Me.DragDrop, AddressOf Form_DragDrop
        AddHandler Me.DragEnter, AddressOf Form_DragEnter

        strooien = True
        endtagset = False
    End Sub

    Private Sub Form_DragEnter(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DragEventArgs)

        'Display different mouse pointer if file is dragged
        If e.Data.GetDataPresent(DataFormats.FileDrop) Then
            e.Effect = DragDropEffects.All
        End If

    End Sub

    Private Sub Form_DragDrop(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DragEventArgs)
        Dim strDroppedFiles As String()
        strDroppedFiles = DirectCast(e.Data.GetData(DataFormats.FileDrop), String())
        For Each strDroppedFile As String In strDroppedFiles



            Dim num_rows As Long
            Dim num_cols As Long
            Dim x As Integer
            Dim y As Integer
            Dim strarray(1, 1) As String
            'Dim strooien As Boolean




            ' Load the file.
            Dim tmpstream As StreamReader = File.OpenText(strDroppedFile)
            Dim strlines() As String
            Dim strline() As String

            Dim strDroppedFileName As String

            strDroppedFileName = Path.GetFileName(strDroppedFile)

            'Load content of file to strLines array
            strlines = tmpstream.ReadToEnd().Split(Environment.NewLine)

            ' Redimension the array.
            num_rows = UBound(strlines)
            num_rows = num_rows - 1

            Try
                strline = strlines(14).Split(",")
            Catch ex As Exception
                Dim rtbLength As Long
                Dim rtbMessage As String
                rtbMessage = vbNewLine & strDroppedFileName & vbTab & vbTab & "INVALID FILE"
                rtbLength = RichTextBox1.TextLength
                RichTextBox1.AppendText(rtbMessage)
                RichTextBox1.SelectionStart = rtbLength
                RichTextBox1.SelectionLength = rtbMessage.Length
                RichTextBox1.SelectionColor = Color.DarkOrange
                GoTo PrematureLoopEnd
            End Try

            num_cols = UBound(strline)



            ReDim strarray(num_rows, num_cols)
            Dim startx As Integer


            Try
                For x = 11 To num_rows
                    strline = strlines(x).Split(","c)
                    For y = 0 To num_cols
                        strarray(x, y) = strline(y)
                    Next
                Next
                startx = 11
            Catch ex As IndexOutOfRangeException
                For x = 12 To num_rows
                    strline = strlines(x).Split(","c)
                    For y = 0 To num_cols
                        strarray(x, y) = strline(y)
                    Next
                Next
                startx = 12
            End Try

            Dim newfilename As String
            newfilename = Microsoft.VisualBasic.Left(strDroppedFile, Len(strDroppedFile) - 3)
            newfilename = newfilename & "kml"


            Using writer As StreamWriter = New StreamWriter(newfilename)
                writer.WriteLine("<?xml version=""1.0"" encoding=""UTF-8""?>")
                writer.WriteLine("<kml xmlns=""http://www.opengis.net/kml/2.2"">")
                writer.WriteLine(vbTab & "<Document>")
                writer.WriteLine(vbTab & "<description>")
                writer.WriteLine(vbTab & vbTab & "Generated by ALR-to-KML converter. Tool coded by Vandael Marc (vandael.marc@gmail.com)")
                writer.WriteLine(vbTab & "</description>")
                writer.WriteLine(vbTab & "<Style id=""VolledigTraject""><LineStyle><width>4</width><color>2814F000</color></LineStyle></Style>")
                writer.WriteLine(vbTab & "<Style id=""NietStrooien""><LineStyle><width>4</width><color>641400FF</color></LineStyle></Style>")

                writer.WriteLine(vbTab & vbTab & "<Placemark>")
                writer.WriteLine(vbTab & vbTab & vbTab & "<styleUrl>#VolledigTraject</styleUrl>")
                writer.WriteLine(vbTab & vbTab & vbTab & "<LineString>")
                writer.WriteLine(vbTab & vbTab & vbTab & "<gx:drawOrder>0</gx:drawOrder>")
                writer.WriteLine(vbTab & vbTab & vbTab & vbTab & "<coordinates>")


                For x = startx To num_rows
                    writer.WriteLine(vbTab & vbTab & vbTab & vbTab & vbTab & strarray(x, 2) & "," & strarray(x, 1) & ",0")
                Next


                'writer.WriteLine(vbTab & vbTab & vbTab & vbTab & "</coordinates>")
                'writer.WriteLine(vbTab & vbTab & vbTab & "</LineString>")
                'writer.WriteLine(vbTab & vbTab & "</Placemark>")


                'newblock niet strooien
                For x = startx To num_rows
                    If strarray(x, 5) = "0" Then
                        strooien = False
                        writer.WriteLine(vbTab & vbTab & "<Placemark>")
                        writer.WriteLine(vbTab & vbTab & vbTab & "<styleUrl>#NietStrooien</styleUrl>")
                        writer.WriteLine(vbTab & vbTab & vbTab & "<LineString>")
                        writer.WriteLine(vbTab & vbTab & vbTab & "<gx:drawOrder>1</gx:drawOrder>")
                        writer.WriteLine(vbTab & vbTab & vbTab & vbTab & "<coordinates>")
                        endtagset = False
                    End If

                    If strooien = False Then
                        writer.WriteLine(vbTab & vbTab & vbTab & vbTab & vbTab & strarray(x - 1, 2) & "," & strarray(x - 1, 1) & ",0")
                    End If

                    If strarray(x, 5) = "1" Then
                        strooien = True
                        If endtagset = False Then
                            writer.WriteLine(vbTab & vbTab & vbTab & vbTab & "</coordinates>")
                            writer.WriteLine(vbTab & vbTab & vbTab & "</LineString>")
                            writer.WriteLine(vbTab & vbTab & "</Placemark>")

                            endtagset = True
                        End If
                    End If
                Next











                writer.WriteLine(vbTab & vbTab & vbTab & vbTab & "</coordinates>")
                writer.WriteLine(vbTab & vbTab & vbTab & "</LineString>")
                writer.WriteLine(vbTab & vbTab & "</Placemark>")
                writer.WriteLine(vbTab & "</Document>")
                writer.WriteLine("</kml>")
            End Using

            Dim rtbLength2 As Long
            Dim rtbMessage2 As String
            rtbMessage2 = vbNewLine & strDroppedFileName & vbTab & vbTab & "converted ok"
            rtbLength2 = RichTextBox1.TextLength
            RichTextBox1.AppendText(rtbMessage2)
            RichTextBox1.SelectionStart = rtbLength2
            RichTextBox1.SelectionLength = rtbMessage2.Length
            RichTextBox1.SelectionColor = Color.DarkGray


PrematureLoopEnd:
        Next strDroppedFile

    End Sub

End Class
